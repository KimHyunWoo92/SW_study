
SQL 시험


/*
-- Question 1. 
a : 데이터베이스
b : DBMS
c : SQL

-- Question 2.
a : commit
b : rollback

-- Question 3.

FROM - WHERE - GRUOP BY - HAVING - SELECT - ORDER BY

-- Question 4.
DML
SELECT
INSERT
UPDATE
DELETE

DDL
CREATE
ALTER
DROP

DCL

*/


-- Question 5.
/*
SELECT JOB_ID, AVG(SALARY) AS 평균연봉
  FROM EMPLOYEES
 WHERE AVG(SALARY) > 13000
GROUP BY JOB_ID ;
*/

SELECT JOB_ID, AVG(SALARY) AS 평균연봉
  FROM EMPLOYEES
GROUP BY JOB_ID
HAVING AVG(SALARY) > 13000 ;

-- GROUP BY와 WHERE 절은 함께 쓸 수 없음. 따라서 평균연봉의 조건을 HAVING절에서 해결해야한다.

-- Question 6-1.
SELECT * FROM EMPLOYEES ;
SELECT * FROM DEPARTMENTS ;

SELECT E.EMPLOYEE_ID, EMAIL, SALARY, D.DEPARTMENT_NAME, D.LOCATION_ID
  FROM EMPLOYEES E, DEPARTMENTS D
 WHERE (E.DEPARTMENT_ID = D.DEPARTMENT_ID)
   AND E.SALARY >= 14000 ;
   
-- Question 6-2.

SELECT A.DEPARTMENT_ID, A.DEPARTMENT_NAME, A.MANAGER_ID, B.FIRST_NAME, B.LAST_NAME
  FROM DEPARTMENTS A LEFT JOIN EMPLOYEES B
    ON (A.MANAGER_ID = B.EMPLOYEE_ID)
   AND A.LOCATION_ID = 1700;
  
-- Question 7.
SELECT * FROM EMPLOYEES;
/*
SELECT AVG(SALARY)
  FROM EMPLOYEES ; -- 6461...
*/
SELECT FIRST_NAME, JOB_ID, SALARY
  FROM EMPLOYEES
 WHERE SALARY > (SELECT AVG(SALARY)
                   FROM EMPLOYEES );
                   

-- Question 8-1.

CREATE TABLE EMP(
    EMPNO NUMBER(4),
    ENAME VARCHAR2(10),
    JOB   VARCHAR2(9),
    MGR   NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7,2),
    COMM NUMBER(7,2),
    DEPTNO NUMBER(2),

    CONSTRAINT EMP_EMPNO_PK PRIMARY KEY(EMPNO),
    CONSTRAINT EMP_DEPTNO FOREIGN KEY(DEPTNO) REFERENCES HR.DEPT(DEPTNO)
) ;


-- Question 8-2.

CREATE TABLE HR.DEPT(
    DEPTNO  NUMBER(2),
    DNAME   VARCHAR2(14) NOT NULL,
    LOC     VARCHAR2(14),
    
    CONSTRAINT DEPT_DEPTNO_PK PRIMARY KEY(DEPTNO)
);
 


