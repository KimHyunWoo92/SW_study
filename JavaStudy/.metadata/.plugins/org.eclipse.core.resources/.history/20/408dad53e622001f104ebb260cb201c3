package Contoller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class MemberDAO {
	
	// Data Access Objcet : 데이터에 접근하는 것을 도와주는 객체
	// DB와 연결해서 INSERT, DELETE, UPDATE, SELECT 하는 코드들의 모음
	// 메소드 형태로 코드 작성
	
	
	// 회원가입 메소드
	public int join(String id, String pw, String name, int age, int score) {
		Connection conn = null;
		PreparedStatement psmt = null;
		int row = 0;
		
		try {
			
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			
			String user = "hr";
			
			String pw1 = "12345";
			
			conn = DriverManager.getConnection(url, user, pw1);
						
			// 3. Query문 전송
			// 1) Query문 작성
			String sql = "INSERT INTO SWCAMPMEMBER VALUES (?,?,?,?,?)";
			
			// ? 인자
			// : 사용자로부터 어떤 데이터가 들어올지 모를 때 사용
			// : 지정한 데이터 공간만큼
			
			psmt = conn.prepareStatement(sql);
			// --> 전송하기 전에 sql문을 담아서 전송할 수 있는 형식으로 변경
			
			// ? 인자 입력작업
			// 데이터 바인딩 작업
			psmt.setString(1, id);
			psmt.setString(2, pw);
			psmt.setString(3, name);
			psmt.setInt(4, age);
			psmt.setInt(5, score);
			
			
			// 4. sql구문 실행
			row = psmt.executeUpdate();
			
			// 5. 결과를 이용한 작업처리
			// : 사용자에게 어떤 모습을 보여줄건지 정의
			if (row>0) {
				System.out.println("회원가입 성공");
			}else {
				System.out.println("회원가입 실패");
			}
			
			} catch (Exception e) {			
				e.printStackTrace();
				
			} finally {
				try {
					if (psmt != null)
						psmt.close();
					if (conn != null)
						conn.close();
			
				}catch (SQLException e) {
					e.printStackTrace();
				}
			}
			return row;

	
	}

	
	
	
	
	
	
}
